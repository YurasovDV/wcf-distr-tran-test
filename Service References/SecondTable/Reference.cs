//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFDistrTran.SecondTable {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecondTable.ITableSndService")]
    public interface ITableSndService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITableSndService/Insert", ReplyAction="http://tempuri.org/ITableSndService/InsertResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://tempuri.org/ITableSndService/InsertStringFault", Name="string", Namespace="http://schemas.microsoft.com/2003/10/Serialization/")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Mandatory)]
        void Insert(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITableSndService/Insert", ReplyAction="http://tempuri.org/ITableSndService/InsertResponse")]
        System.Threading.Tasks.Task InsertAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITableSndService/InsertWithFail", ReplyAction="http://tempuri.org/ITableSndService/InsertWithFailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://tempuri.org/ITableSndService/InsertWithFailStringFault", Name="string", Namespace="http://schemas.microsoft.com/2003/10/Serialization/")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Mandatory)]
        void InsertWithFail(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITableSndService/InsertWithFail", ReplyAction="http://tempuri.org/ITableSndService/InsertWithFailResponse")]
        System.Threading.Tasks.Task InsertWithFailAsync(int value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITableSndServiceChannel : WCFDistrTran.SecondTable.ITableSndService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TableSndServiceClient : System.ServiceModel.ClientBase<WCFDistrTran.SecondTable.ITableSndService>, WCFDistrTran.SecondTable.ITableSndService {
        
        public TableSndServiceClient() {
        }
        
        public TableSndServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TableSndServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TableSndServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TableSndServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Insert(int value) {
            base.Channel.Insert(value);
        }
        
        public System.Threading.Tasks.Task InsertAsync(int value) {
            return base.Channel.InsertAsync(value);
        }
        
        public void InsertWithFail(int value) {
            base.Channel.InsertWithFail(value);
        }
        
        public System.Threading.Tasks.Task InsertWithFailAsync(int value) {
            return base.Channel.InsertWithFailAsync(value);
        }
    }
}
